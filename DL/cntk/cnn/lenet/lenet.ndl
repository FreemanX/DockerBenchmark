# macros to include
load = ndlMnistMacros

# the actual NDL that defines the network
run = DNN

ndlMnistMacros = [
    imageW = 28
    imageH = 28
    labelDim = 10

    features = ImageInput(imageW, imageH, 1, imageLayout=$imageLayout$)
    featScale = Constant(0.00390625)
    featScaled = Scale(featScale, features)
    labels = InputValue(labelDim)
]

DNN=[
    # conv1
    kW1 = 5
    kH1 = 5
    cMap1 = 20 
    hStride1 = 1
    vStride1 = 1
    # weight[cMap1, kW1 * kH1 * inputChannels]
    pool1 = ConvPoolLayer(featScaled, cMap1, 25, kW1, kH1, hStride1, vStride1, 10, 1, 2, 2, 2, 2)
    
    # conv2
    kW2 = 5
    kH2 = 5
    cMap2 = 50 
    hStride2 = 1
    vStride2 = 1
    # weight[cMap2, kW2 * kH2 * cMap1]
    # ConvNDReLULayer is defined in Macros.ndl
    pool2 = ConvPoolLayer(pool1, cMap2, 500, kW2, kH2, hStride2, vStride2, 10, 1, 2, 2, 2, 2)

    ip1 = InnerProductReLULayer( 800, 500, pool2, 1 )

    ip2 = InnerProductLayer( 500, 10, ip1, 1 ) 
   
    ce = CrossEntropyWithSoftmax(labels, ip2)

    err = ErrorPrediction(labels, ip2)

    # Special Nodes
    FeatureNodes = (features)
    LabelNodes = (labels)
    CriterionNodes = (ce)
    EvalNodes = (err)
    OutputNodes = (ip2)
]

